{"ast":null,"code":"var _jsxFileName = \"/Users/nicolas/D4Gen/client/src/pages/SubmitPhotos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitPhotos = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    if (!selectedFile) {\n      alert('Veuillez sélectionner une photo.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Envoi de la photo au serveur pour analyse\n      // Remplacez cette partie par votre propre logique d'envoi de fichiers\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n      // Exemple d'utilisation de fetch pour envoyer la photo à un endpoint sur le serveur\n      const response = await fetch('/upload-photo', {\n        method: 'POST',\n        body: formData\n      });\n\n      // Traiter la réponse du serveur\n      const data = await response.json();\n      console.log(data); // Afficher la réponse du serveur (par exemple, les résultats de l'analyse)\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi de la photo :', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: !selectedFile || isLoading,\n      children: isLoading ? 'Envoi en cours...' : 'Envoyer la photo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitPhotos, \"XNV6jH1Ekh5mjEY4EQdIC4N5hOU=\");\n_c = SubmitPhotos;\nexport default SubmitPhotos;\nvar _c;\n$RefreshReg$(_c, \"SubmitPhotos\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SubmitPhotos","_s","selectedFile","setSelectedFile","isLoading","setIsLoading","handleFileChange","event","target","files","handleSubmit","alert","formData","FormData","append","response","fetch","method","body","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/nicolas/D4Gen/client/src/pages/SubmitPhotos.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SubmitPhotos = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedFile) {\n      alert('Veuillez sélectionner une photo.');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Envoi de la photo au serveur pour analyse\n      // Remplacez cette partie par votre propre logique d'envoi de fichiers\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n\n      // Exemple d'utilisation de fetch pour envoyer la photo à un endpoint sur le serveur\n      const response = await fetch('/upload-photo', {\n        method: 'POST',\n        body: formData,\n      });\n\n      // Traiter la réponse du serveur\n      const data = await response.json();\n      console.log(data); // Afficher la réponse du serveur (par exemple, les résultats de l'analyse)\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi de la photo :', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Submit Photos</h1>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleSubmit} disabled={!selectedFile || isLoading}>\n        {isLoading ? 'Envoi en cours...' : 'Envoyer la photo'}\n      </button>\n    </div>\n  );\n};\n\nexport default SubmitPhotos;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,YAAY,EAAE;MACjBS,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IAEAN,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA;MACA,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,YAAY,CAAC;;MAEtC;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;;MAEF;MACA,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD7B,OAAA;MAAQgC,OAAO,EAAErB,YAAa;MAACsB,QAAQ,EAAE,CAAC9B,YAAY,IAAIE,SAAU;MAAAoB,QAAA,EACjEpB,SAAS,GAAG,mBAAmB,GAAG;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/CID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
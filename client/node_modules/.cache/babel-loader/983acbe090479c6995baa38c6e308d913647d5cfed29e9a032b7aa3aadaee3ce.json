{"ast":null,"code":"import { cn, mapPropsVariants } from \"./chunk-SF6SJHAM.mjs\";\n\n// src/extend-variants.js\nimport * as React from \"react\";\nimport { tv } from \"@nextui-org/theme\";\nfunction getSlots(variants) {\n  return variants ? Object.values(variants).flatMap(Object.values).reduce((acc, slot) => {\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\n      Object.keys(slot).forEach(key => {\n        if (!acc.hasOwnProperty(key)) {\n          acc[key] = \"\";\n        }\n      });\n    }\n    return acc;\n  }, {}) : {};\n}\nfunction getClassNamesWithProps({\n  props,\n  defaultVariants,\n  customTv,\n  hasSlots\n}) {\n  var _a;\n  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);\n  const newProps = {\n    ...defaultVariants,\n    ...baseProps\n  };\n  let classNames = {};\n  const result = customTv(variantProps);\n  if (!hasSlots) {\n    newProps.className = cn(result, props.className);\n  } else {\n    Object.entries(result).forEach(([key, value]) => {\n      const slotResult = value();\n      if (typeof slotResult === \"string\") {\n        classNames[key] = slotResult;\n      }\n    });\n    Object.entries((_a = props.classNames) != null ? _a : {}).forEach(([key, value]) => {\n      classNames[key] = cn(classNames[key], value);\n    });\n  }\n  if (Object.keys(classNames).length !== 0) {\n    newProps.classNames = classNames;\n  }\n  return newProps;\n}\nfunction extendVariants(BaseComponent, styles = {}, opts = {}) {\n  var _a, _b;\n  const {\n    variants,\n    defaultVariants,\n    compoundVariants\n  } = styles || {};\n  const slots = getSlots(variants);\n  const hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\n  const customTv = tv({\n    variants,\n    defaultVariants,\n    compoundVariants,\n    ...(hasSlots && {\n      slots\n    })\n  }, {\n    twMerge: (_a = opts.twMerge) != null ? _a : true,\n    twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\n  });\n  const ForwardedComponent = React.forwardRef((originalProps = {}, ref) => {\n    const newProps = getClassNamesWithProps({\n      props: originalProps,\n      defaultVariants,\n      customTv,\n      hasSlots\n    });\n    return React.createElement(BaseComponent, {\n      ...originalProps,\n      ...newProps,\n      ref\n    });\n  });\n  if (BaseComponent.getCollectionNode) {\n    ForwardedComponent.getCollectionNode = itemProps => {\n      const newProps = getClassNamesWithProps({\n        props: itemProps,\n        defaultVariants,\n        customTv,\n        hasSlots\n      });\n      return BaseComponent.getCollectionNode({\n        ...itemProps,\n        ...newProps\n      });\n    };\n  }\n  ForwardedComponent.displayName = `Extended(${BaseComponent.displayName || BaseComponent.name})`;\n  return ForwardedComponent;\n}\nexport { extendVariants };","map":{"version":3,"names":["cn","mapPropsVariants","React","tv","getSlots","variants","Object","values","flatMap","reduce","acc","slot","String","keys","forEach","key","hasOwnProperty","getClassNamesWithProps","props","defaultVariants","customTv","hasSlots","_a","baseProps","variantProps","variantKeys","newProps","classNames","result","className","entries","value","slotResult","length","extendVariants","BaseComponent","styles","opts","_b","compoundVariants","slots","twMerge","twMergeConfig","ForwardedComponent","forwardRef","originalProps","ref","createElement","getCollectionNode","itemProps","displayName","name"],"sources":["C:/Users/duman/Documents/TSP/kryptosphÃ¨re/D4gen/D4Gen/client/node_modules/@nextui-org/system-rsc/dist/chunk-Y5MPM7Z5.mjs"],"sourcesContent":["import {\r\n  cn,\r\n  mapPropsVariants\r\n} from \"./chunk-SF6SJHAM.mjs\";\r\n\r\n// src/extend-variants.js\r\nimport * as React from \"react\";\r\nimport { tv } from \"@nextui-org/theme\";\r\nfunction getSlots(variants) {\r\n  return variants ? Object.values(variants).flatMap(Object.values).reduce((acc, slot) => {\r\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\r\n      Object.keys(slot).forEach((key) => {\r\n        if (!acc.hasOwnProperty(key)) {\r\n          acc[key] = \"\";\r\n        }\r\n      });\r\n    }\r\n    return acc;\r\n  }, {}) : {};\r\n}\r\nfunction getClassNamesWithProps({ props, defaultVariants, customTv, hasSlots }) {\r\n  var _a;\r\n  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);\r\n  const newProps = { ...defaultVariants, ...baseProps };\r\n  let classNames = {};\r\n  const result = customTv(variantProps);\r\n  if (!hasSlots) {\r\n    newProps.className = cn(result, props.className);\r\n  } else {\r\n    Object.entries(result).forEach(([key, value]) => {\r\n      const slotResult = value();\r\n      if (typeof slotResult === \"string\") {\r\n        classNames[key] = slotResult;\r\n      }\r\n    });\r\n    Object.entries((_a = props.classNames) != null ? _a : {}).forEach(([key, value]) => {\r\n      classNames[key] = cn(classNames[key], value);\r\n    });\r\n  }\r\n  if (Object.keys(classNames).length !== 0) {\r\n    newProps.classNames = classNames;\r\n  }\r\n  return newProps;\r\n}\r\nfunction extendVariants(BaseComponent, styles = {}, opts = {}) {\r\n  var _a, _b;\r\n  const { variants, defaultVariants, compoundVariants } = styles || {};\r\n  const slots = getSlots(variants);\r\n  const hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\r\n  const customTv = tv(\r\n    {\r\n      variants,\r\n      defaultVariants,\r\n      compoundVariants,\r\n      ...hasSlots && { slots }\r\n    },\r\n    {\r\n      twMerge: (_a = opts.twMerge) != null ? _a : true,\r\n      twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\r\n    }\r\n  );\r\n  const ForwardedComponent = React.forwardRef((originalProps = {}, ref) => {\r\n    const newProps = getClassNamesWithProps({\r\n      props: originalProps,\r\n      defaultVariants,\r\n      customTv,\r\n      hasSlots\r\n    });\r\n    return React.createElement(BaseComponent, { ...originalProps, ...newProps, ref });\r\n  });\r\n  if (BaseComponent.getCollectionNode) {\r\n    ForwardedComponent.getCollectionNode = (itemProps) => {\r\n      const newProps = getClassNamesWithProps({\r\n        props: itemProps,\r\n        defaultVariants,\r\n        customTv,\r\n        hasSlots\r\n      });\r\n      return BaseComponent.getCollectionNode({ ...itemProps, ...newProps });\r\n    };\r\n  }\r\n  ForwardedComponent.displayName = `Extended(${BaseComponent.displayName || BaseComponent.name})`;\r\n  return ForwardedComponent;\r\n}\r\n\r\nexport {\r\n  extendVariants\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duman\\\\Documents\\\\TSP\\\\kryptosph\\xE8re\\\\D4gen\\\\D4Gen\\\\client\\\\src\\\\pages\\\\SubmitPhotos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitPhotos = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [rescaledImage, setRescaledImage] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setRescaledImage(null); // Reset the rescaled image when a new file is selected\n  };\n\n  const rescaleImage = async file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const maxWidth = 400; // Change this value to the desired maximum width\n          const maxHeight = 400; // Change this value to the desired maximum height\n          let width = img.width;\n          let height = img.height;\n          if (width > height) {\n            if (width > maxWidth) {\n              height *= maxWidth / width;\n              width = maxWidth;\n            }\n          } else {\n            if (height > maxHeight) {\n              width *= maxHeight / height;\n              height = maxHeight;\n            }\n          }\n          canvas.width = width;\n          canvas.height = height;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, width, height);\n          canvas.toBlob(blob => resolve(blob), 'image/jpeg');\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const handleSubmit = async () => {\n    if (!selectedFile) {\n      alert('Veuillez sélectionner une photo.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const rescaledBlob = await rescaleImage(selectedFile);\n      // Now you can use rescaledBlob for further processing or sending to server\n\n      // Example: sending the rescaled image blob to the server\n      const formData = new FormData();\n      formData.append('photo', rescaledBlob);\n      const response = await fetch('/upload-photo', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi de la photo :', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '79vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Photo s\\xE9lectionn\\xE9e :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(selectedFile),\n          alt: \"Photo s\\xE9lectionn\\xE9e\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: !selectedFile || isLoading,\n        children: isLoading ? 'Envoi en cours...' : 'Envoyer la photo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitPhotos, \"oYEdKfsDp3//k4X9b3TsZ6YeC/4=\");\n_c = SubmitPhotos;\nexport default SubmitPhotos;\nvar _c;\n$RefreshReg$(_c, \"SubmitPhotos\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SubmitPhotos","_s","selectedFile","setSelectedFile","isLoading","setIsLoading","rescaledImage","setRescaledImage","handleFileChange","event","target","files","rescaleImage","file","Promise","resolve","reject","reader","FileReader","onload","img","Image","canvas","document","createElement","maxWidth","maxHeight","width","height","ctx","getContext","drawImage","toBlob","blob","src","result","readAsDataURL","handleSubmit","alert","rescaledBlob","formData","FormData","append","response","fetch","method","body","data","json","console","log","error","style","display","justifyContent","alignItems","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","URL","createObjectURL","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/duman/Documents/TSP/kryptosphère/D4gen/D4Gen/client/src/pages/SubmitPhotos.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SubmitPhotos = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [rescaledImage, setRescaledImage] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n    setRescaledImage(null); // Reset the rescaled image when a new file is selected\r\n  };\r\n\r\n  const rescaleImage = async (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          const maxWidth = 400; // Change this value to the desired maximum width\r\n          const maxHeight = 400; // Change this value to the desired maximum height\r\n          let width = img.width;\r\n          let height = img.height;\r\n\r\n          if (width > height) {\r\n            if (width > maxWidth) {\r\n              height *= maxWidth / width;\r\n              width = maxWidth;\r\n            }\r\n          } else {\r\n            if (height > maxHeight) {\r\n              width *= maxHeight / height;\r\n              height = maxHeight;\r\n            }\r\n          }\r\n\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          const ctx = canvas.getContext('2d');\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n          canvas.toBlob((blob) => resolve(blob), 'image/jpeg');\r\n        };\r\n        img.src = event.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!selectedFile) {\r\n      alert('Veuillez sélectionner une photo.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const rescaledBlob = await rescaleImage(selectedFile);\r\n      // Now you can use rescaledBlob for further processing or sending to server\r\n\r\n      // Example: sending the rescaled image blob to the server\r\n      const formData = new FormData();\r\n      formData.append('photo', rescaledBlob);\r\n\r\n      const response = await fetch('/upload-photo', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'envoi de la photo :', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '79vh' }}>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Submit Photos</h1>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        {selectedFile && (\r\n          <div>\r\n            <h2>Photo sélectionnée :</h2>\r\n            <img src={URL.createObjectURL(selectedFile)} alt=\"Photo sélectionnée\" style={{ maxWidth: '100%', height: 'auto' }} />\r\n          </div>\r\n        )}\r\n        <button onClick={handleSubmit} disabled={!selectedFile || isLoading}>\r\n          {isLoading ? 'Envoi en cours...' : 'Envoyer la photo'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitPhotos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
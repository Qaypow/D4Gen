{"ast":null,"code":"\"use client\";\n\n// src/use-avatar-group.ts\nimport { avatarGroup } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, compact } from \"@nextui-org/shared-utils\";\nimport { getValidChildren } from \"@nextui-org/react-utils\";\nimport { cloneElement, useMemo } from \"react\";\nfunction useAvatarGroup(props = {}) {\n  const {\n    as,\n    ref,\n    max = 5,\n    total,\n    size,\n    color,\n    radius,\n    children,\n    isBordered,\n    isDisabled,\n    isGrid,\n    renderCount,\n    className,\n    ...otherProps\n  } = props;\n  const domRef = useDOMRef(ref);\n  const Component = as || \"div\";\n  const context = useMemo(() => ({\n    size,\n    color,\n    radius,\n    isGrid,\n    isBordered,\n    isDisabled\n  }), [size, color, radius, isGrid, isBordered, isDisabled]);\n  const classNames = useMemo(() => avatarGroup({\n    className,\n    isGrid\n  }), [className, isGrid]);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  const remainingCount = total ? total : max != null ? validChildren.length - max : -1;\n  const clones = childrenWithinMax.map((child, index) => {\n    const isFirstAvatar = index === 0;\n    const isLastAvatar = index === childrenWithinMax.length - 1;\n    const childProps = {\n      className: clsx(isFirstAvatar ? \"ms-0\" : !isGrid ? \"-ms-2\" : \"\", isLastAvatar && remainingCount < 1 ? \"hover:-translate-x-0\" : \"\")\n    };\n    return cloneElement(child, compact(childProps));\n  });\n  const getAvatarGroupProps = () => {\n    return {\n      ref: domRef,\n      className: classNames,\n      role: \"group\",\n      ...otherProps\n    };\n  };\n  return {\n    Component,\n    context,\n    remainingCount,\n    clones,\n    renderCount,\n    getAvatarGroupProps\n  };\n}\nexport { useAvatarGroup };","map":{"version":3,"names":["avatarGroup","useDOMRef","clsx","compact","getValidChildren","cloneElement","useMemo","useAvatarGroup","props","as","ref","max","total","size","color","radius","children","isBordered","isDisabled","isGrid","renderCount","className","otherProps","domRef","Component","context","classNames","validChildren","childrenWithinMax","slice","remainingCount","length","clones","map","child","index","isFirstAvatar","isLastAvatar","childProps","getAvatarGroupProps","role"],"sources":["C:/Users/duman/Documents/TSP/kryptosphÃ¨re/D4gen/D4Gen/client/node_modules/@nextui-org/avatar/dist/chunk-HHRZQPSU.mjs"],"sourcesContent":["\"use client\";\r\n\r\n// src/use-avatar-group.ts\r\nimport { avatarGroup } from \"@nextui-org/theme\";\r\nimport { useDOMRef } from \"@nextui-org/react-utils\";\r\nimport { clsx, compact } from \"@nextui-org/shared-utils\";\r\nimport { getValidChildren } from \"@nextui-org/react-utils\";\r\nimport { cloneElement, useMemo } from \"react\";\r\nfunction useAvatarGroup(props = {}) {\r\n  const {\r\n    as,\r\n    ref,\r\n    max = 5,\r\n    total,\r\n    size,\r\n    color,\r\n    radius,\r\n    children,\r\n    isBordered,\r\n    isDisabled,\r\n    isGrid,\r\n    renderCount,\r\n    className,\r\n    ...otherProps\r\n  } = props;\r\n  const domRef = useDOMRef(ref);\r\n  const Component = as || \"div\";\r\n  const context = useMemo(\r\n    () => ({\r\n      size,\r\n      color,\r\n      radius,\r\n      isGrid,\r\n      isBordered,\r\n      isDisabled\r\n    }),\r\n    [size, color, radius, isGrid, isBordered, isDisabled]\r\n  );\r\n  const classNames = useMemo(() => avatarGroup({ className, isGrid }), [className, isGrid]);\r\n  const validChildren = getValidChildren(children);\r\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\r\n  const remainingCount = total ? total : max != null ? validChildren.length - max : -1;\r\n  const clones = childrenWithinMax.map((child, index) => {\r\n    const isFirstAvatar = index === 0;\r\n    const isLastAvatar = index === childrenWithinMax.length - 1;\r\n    const childProps = {\r\n      className: clsx(\r\n        isFirstAvatar ? \"ms-0\" : !isGrid ? \"-ms-2\" : \"\",\r\n        isLastAvatar && remainingCount < 1 ? \"hover:-translate-x-0\" : \"\"\r\n      )\r\n    };\r\n    return cloneElement(child, compact(childProps));\r\n  });\r\n  const getAvatarGroupProps = () => {\r\n    return {\r\n      ref: domRef,\r\n      className: classNames,\r\n      role: \"group\",\r\n      ...otherProps\r\n    };\r\n  };\r\n  return {\r\n    Component,\r\n    context,\r\n    remainingCount,\r\n    clones,\r\n    renderCount,\r\n    getAvatarGroupProps\r\n  };\r\n}\r\n\r\nexport {\r\n  useAvatarGroup\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,IAAI,EAAEC,OAAO,QAAQ,0BAA0B;AACxD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,YAAY,EAAEC,OAAO,QAAQ,OAAO;AAC7C,SAASC,cAAcA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE;EAClC,MAAM;IACJC,EAAE;IACFC,GAAG;IACHC,GAAG,GAAG,CAAC;IACPC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,UAAU;IACVC,UAAU;IACVC,MAAM;IACNC,WAAW;IACXC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGd,KAAK;EACT,MAAMe,MAAM,GAAGtB,SAAS,CAACS,GAAG,CAAC;EAC7B,MAAMc,SAAS,GAAGf,EAAE,IAAI,KAAK;EAC7B,MAAMgB,OAAO,GAAGnB,OAAO,CACrB,OAAO;IACLO,IAAI;IACJC,KAAK;IACLC,MAAM;IACNI,MAAM;IACNF,UAAU;IACVC;EACF,CAAC,CAAC,EACF,CAACL,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEI,MAAM,EAAEF,UAAU,EAAEC,UAAU,CACtD,CAAC;EACD,MAAMQ,UAAU,GAAGpB,OAAO,CAAC,MAAMN,WAAW,CAAC;IAAEqB,SAAS;IAAEF;EAAO,CAAC,CAAC,EAAE,CAACE,SAAS,EAAEF,MAAM,CAAC,CAAC;EACzF,MAAMQ,aAAa,GAAGvB,gBAAgB,CAACY,QAAQ,CAAC;EAChD,MAAMY,iBAAiB,GAAGjB,GAAG,GAAGgB,aAAa,CAACE,KAAK,CAAC,CAAC,EAAElB,GAAG,CAAC,GAAGgB,aAAa;EAC3E,MAAMG,cAAc,GAAGlB,KAAK,GAAGA,KAAK,GAAGD,GAAG,IAAI,IAAI,GAAGgB,aAAa,CAACI,MAAM,GAAGpB,GAAG,GAAG,CAAC,CAAC;EACpF,MAAMqB,MAAM,GAAGJ,iBAAiB,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACrD,MAAMC,aAAa,GAAGD,KAAK,KAAK,CAAC;IACjC,MAAME,YAAY,GAAGF,KAAK,KAAKP,iBAAiB,CAACG,MAAM,GAAG,CAAC;IAC3D,MAAMO,UAAU,GAAG;MACjBjB,SAAS,EAAEnB,IAAI,CACbkC,aAAa,GAAG,MAAM,GAAG,CAACjB,MAAM,GAAG,OAAO,GAAG,EAAE,EAC/CkB,YAAY,IAAIP,cAAc,GAAG,CAAC,GAAG,sBAAsB,GAAG,EAChE;IACF,CAAC;IACD,OAAOzB,YAAY,CAAC6B,KAAK,EAAE/B,OAAO,CAACmC,UAAU,CAAC,CAAC;EACjD,CAAC,CAAC;EACF,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OAAO;MACL7B,GAAG,EAAEa,MAAM;MACXF,SAAS,EAAEK,UAAU;MACrBc,IAAI,EAAE,OAAO;MACb,GAAGlB;IACL,CAAC;EACH,CAAC;EACD,OAAO;IACLE,SAAS;IACTC,OAAO;IACPK,cAAc;IACdE,MAAM;IACNZ,WAAW;IACXmB;EACF,CAAC;AACH;AAEA,SACEhC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}